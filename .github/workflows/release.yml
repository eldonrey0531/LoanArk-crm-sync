name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_HUBSPOT_CLIENT_ID: ${{ secrets.VITE_HUBSPOT_CLIENT_ID }}
        VITE_HUBSPOT_CLIENT_SECRET: ${{ secrets.VITE_HUBSPOT_CLIENT_SECRET }}
        VITE_APP_ENV: production
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}

    - name: Generate changelog
      id: changelog
      run: |
        # Get the latest tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$LATEST_TAG" ]; then
          LATEST_TAG=$(git rev-list --max-parents=0 HEAD)
        fi

        # Generate changelog
        echo "## Changes since $LATEST_TAG" > changelog.md
        echo "" >> changelog.md
        git log --pretty=format:"- %s (%h)" $LATEST_TAG..HEAD >> changelog.md
        echo "" >> changelog.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$LATEST_TAG...${{ github.ref_name }}" >> changelog.md

        # Read changelog content
        CHANGELOG_CONTENT=$(cat changelog.md)
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false

    - name: Deploy to Production
      uses: nwtgck/actions-netlify@v3.0
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Production Release ${{ github.ref }}"
        enable-pull-request-comment: false
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: release
    if: always()

    steps:
    - name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "ðŸš€ New release deployed: ${{ github.ref }} - ${{ github.repository }}"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: env.SLACK_WEBHOOK_URL != null